{"version":3,"sources":["components/AboutModal.js","components/Search.js","components/VideoItem.js","components/SearchResult.js","components/VideoPlayer.js","components/VideoQueue.js","App.js","reportWebVitals.js","index.js"],"names":["AboutModal","React","useState","open","setOpen","Modal","onClose","onOpen","trigger","Button","circular","Header","Content","Description","Container","href","Actions","color","onClick","Search","searchVideo","loading","searchInput","setSearchInput","isKaraoke","setIsKaraoke","submit","trim","Grid","columns","Column","width","Input","fluid","placeholder","value","onKeyDown","event","key","onChange","e","target","icon","labelPosition","Icon","name","type","id","checked","currentTarget","htmlFor","VideoItem","item","onThumbnailClick","onRemoveClick","thumbnailText","showDelete","Row","style","margin","cursor","Reveal","animated","visible","Image","src","snippet","thumbnails","default","url","hidden","disabled","title","publishedAt","SearchResult","searchResults","addToQueue","searchQuery","accordionOpen","setAccordionOpen","Accordion","Title","active","Card","length","map","x","videoId","VideoPlayer","videoToPlay","onEnded","className","playing","controls","VideoQueue","queue","setQueue","removeItem","playItem","list","setList","dayjs","extend","relativeTime","App","setSearchResults","setSearchQuery","setVideoToPlay","isLoaded","setIsLoaded","hasStoredQueue","setHasStoredQueue","setLoading","ytqueueServer","process","REACT_APP_YTQUEUE_SERVER","useEffect","localStorage","setItem","JSON","stringify","storedQueue","parse","getItem","ReactGa","initialize","pageview","a","axios","get","data","fromNow","played","Math","random","toString","substr","playedItemIndex","findIndex","nextItemToPlay","itemToPlay","find","isPlayed","itemToRemove","splice","secondary","size","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.6d4676c7.chunk.js","sourcesContent":["import React from \"react\";\r\nimport { Button, Container, Modal } from \"semantic-ui-react\";\r\n\r\nfunction AboutModal() {\r\n  const [open, setOpen] = React.useState(false);\r\n\r\n  return (\r\n    <Modal\r\n      onClose={() => setOpen(false)}\r\n      onOpen={() => setOpen(true)}\r\n      open={open}\r\n      trigger={<Button circular>?</Button>}\r\n    >\r\n      <Modal.Header>About YTQueue</Modal.Header>\r\n      <Modal.Content>\r\n        <Modal.Description>\r\n          <h4>\r\n            This YouTube Queue Web App is created primarily for Karaoke use\r\n          </h4>\r\n          <h5>Recommended setup:</h5>\r\n          <Container>\r\n            <ol>\r\n              <li>\r\n                Use Firefox browser to allow picture in picture to be scaled to\r\n                full screen\r\n              </li>\r\n              <li>Connect PC to secondary screen (TV,Monitor,Projector)</li>\r\n              <li>Connect PC to speaker </li>\r\n              <li>Search for a song</li>\r\n              <li>Add song to queue by clicking the thumbnail</li>\r\n              <li>\r\n                Reorder, remove, skip song as they appear in the \"Queue\" column\r\n              </li>\r\n              <li>\r\n                When a video is playing, hold Shift then right click the video\r\n              </li>\r\n              <li>Select \"Picture-in-Picture\"</li>\r\n              <li>Drag the window to the secondary screen and resize</li>\r\n            </ol>\r\n            <br />\r\n            <h5>\r\n              This site uses YouTube API for searches, by using this you agree\r\n              to{\" \"}\r\n            </h5>\r\n            <ul>\r\n              <li>\r\n                <a href=\"https://www.youtube.com/t/terms\">\r\n                  YouTube Terms of Service\r\n                </a>\r\n              </li>\r\n              <li>\r\n                <a href=\"http://www.google.com/policies/privacy\">\r\n                  Google Privacy Policy\r\n                </a>\r\n              </li>\r\n            </ul>\r\n          </Container>\r\n        </Modal.Description>\r\n      </Modal.Content>\r\n      <Modal.Actions>\r\n        <Button color=\"black\" onClick={() => setOpen(false)}>\r\n          Ok\r\n        </Button>\r\n      </Modal.Actions>\r\n    </Modal>\r\n  );\r\n}\r\n\r\nexport default AboutModal;\r\n","import React, { useState } from \"react\";\r\nimport { Button, Input, Icon, Grid } from \"semantic-ui-react\";\r\nimport \"../App.css\";\r\nimport AboutModal from \"./AboutModal\";\r\n\r\nfunction Search({ searchVideo, loading }) {\r\n  const [searchInput, setSearchInput] = useState(\"\");\r\n  const [isKaraoke, setIsKaraoke] = useState(true);\r\n\r\n  const handleKeyDown = (event) => {\r\n    if (event.key === \"Enter\") {\r\n      submit();\r\n    }\r\n  };\r\n\r\n  const submit = () => {\r\n    if (!loading && searchInput.trim()) {\r\n      searchVideo(`${searchInput} ${isKaraoke ? \"karaoke\" : \"\"}`);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <Grid columns=\"equal\">\r\n      <Grid.Column width={8}>\r\n        <Input\r\n          fluid\r\n          placeholder=\"Search...\"\r\n          value={searchInput}\r\n          onKeyDown={handleKeyDown}\r\n          onChange={(e) => setSearchInput(e.target.value)}\r\n        />\r\n      </Grid.Column>\r\n      <Grid.Column>\r\n        <Button loading={loading} icon labelPosition=\"left\" onClick={submit}>\r\n          <Icon name=\"search\" />\r\n          Search\r\n        </Button>\r\n      </Grid.Column>\r\n      <Grid.Column>\r\n        <div>\r\n          <input\r\n            type=\"checkbox\"\r\n            id=\"is-karaoke\"\r\n            checked={isKaraoke}\r\n            onChange={(e) => setIsKaraoke(e.currentTarget.checked)}\r\n          />\r\n          <label htmlFor=\"is-karaoke\">Add \"karaoke\" to search</label>\r\n        </div>\r\n      </Grid.Column>\r\n      <Grid.Column>\r\n        <AboutModal></AboutModal>\r\n      </Grid.Column>\r\n    </Grid>\r\n  );\r\n}\r\n\r\nexport default Search;\r\n","import React from \"react\";\r\nimport { Grid, Icon, Image, Reveal } from \"semantic-ui-react\";\r\n\r\nfunction VideoItem({\r\n  item,\r\n  onThumbnailClick,\r\n  onRemoveClick,\r\n  thumbnailText,\r\n  showDelete,\r\n}) {\r\n  const handleThumbnailClick = () => {\r\n    onThumbnailClick(item);\r\n  };\r\n\r\n  const handleRemove = () => {\r\n    onRemoveClick(item);\r\n  };\r\n\r\n  return (\r\n    <Grid columns={2}>\r\n      <Grid.Row style={{ margin: \"1rem\" }}>\r\n        <Grid.Column\r\n          width={6}\r\n          style={{ cursor: \"pointer\" }}\r\n          onClick={handleThumbnailClick}\r\n        >\r\n          <Reveal animated=\"small fade\">\r\n            <Reveal.Content visible>\r\n              <Image src={item.snippet.thumbnails.default.url} />\r\n            </Reveal.Content>\r\n            <Reveal.Content hidden>\r\n              <Icon disabled name=\"play circle\" />\r\n              {thumbnailText}\r\n            </Reveal.Content>\r\n          </Reveal>\r\n        </Grid.Column>\r\n        <Grid.Column>\r\n          <div>{item.snippet.title}</div>\r\n          <div>{item.publishedAt}</div>\r\n          {showDelete && (\r\n            <Icon\r\n              color=\"red\"\r\n              style={{ cursor: \"pointer\" }}\r\n              onClick={handleRemove}\r\n              name=\"delete\"\r\n            />\r\n          )}\r\n        </Grid.Column>\r\n      </Grid.Row>\r\n    </Grid>\r\n  );\r\n}\r\n\r\nexport default VideoItem;\r\n","import React, { useState } from \"react\";\r\nimport { Accordion, Card, Icon } from \"semantic-ui-react\";\r\nimport VideoItem from \"./VideoItem\";\r\n\r\nfunction SearchResult({ searchResults, addToQueue, searchQuery }) {\r\n  const [accordionOpen, setAccordionOpen] = useState(true);\r\n\r\n  return (\r\n    <Accordion>\r\n      <Accordion.Title\r\n        active={accordionOpen}\r\n        onClick={() => setAccordionOpen(!accordionOpen)}\r\n      >\r\n        <Icon name=\"dropdown\" />\r\n        Search Result for \"{searchQuery}\"\r\n      </Accordion.Title>\r\n      <Accordion.Content active={accordionOpen}>\r\n        <Card fluid>\r\n          <Card.Content>\r\n            {searchResults?.length &&\r\n              searchResults.map((x) => (\r\n                <VideoItem\r\n                  key={x.id.videoId}\r\n                  item={x}\r\n                  thumbnailText=\"Add to queue\"\r\n                  onThumbnailClick={addToQueue}\r\n                />\r\n              ))}\r\n          </Card.Content>\r\n        </Card>\r\n      </Accordion.Content>\r\n    </Accordion>\r\n  );\r\n}\r\n\r\nexport default SearchResult;\r\n","import React from \"react\";\r\nimport ReactPlayer from \"react-player/youtube\";\r\nimport { Container } from \"semantic-ui-react\";\r\nimport \"../App.css\";\r\n\r\nfunction VideoPlayer({ videoToPlay, onEnded }) {\r\n  const youtubeUrl = \"https://www.youtube.com/watch?v=\";\r\n  let isPip = false;\r\n\r\n  // TODO: button to toggle picture in picture\r\n  // const togglePictureInPicture = async () => {\r\n  //   const videos = document.getElementsByTagName(\"video\");\r\n\r\n  //   if (videos.length) {\r\n  //     const video = videos[0];\r\n  //     console.log(\r\n  //       \"🚀 ~ file: VideoPlayer.js ~ line 19 ~ togglePictureInPicture ~ video\",\r\n  //       video\r\n  //     );\r\n  //     if (!isPip) {\r\n  //       await video[0].requestPictureInPicture();\r\n  //       isPip = true;\r\n  //       video.setAttribute(\"isPip\", true);\r\n  //       video.addEventListener(\r\n  //         \"leavepictureinpicture\",\r\n  //         (event) => {\r\n  //           isPip = false;\r\n\r\n  //           video.removeAttribute(\"isPip\");\r\n  //         },\r\n  //         {\r\n  //           once: true,\r\n  //         }\r\n  //       );\r\n  //     }\r\n  //   }\r\n  // };\r\n\r\n  return (\r\n    <Container>\r\n      <h4>Currently playing</h4>\r\n      <div className=\"video-responsive\">\r\n        <ReactPlayer\r\n          playing\r\n          controls\r\n          onEnded={() => onEnded(videoToPlay?.key)}\r\n          url={`${youtubeUrl}${videoToPlay?.id?.videoId}`}\r\n        />\r\n      </div>\r\n      {/* <Button onClick={togglePictureInPicture}>\r\n        Toggle picture-in-picture\r\n      </Button> */}\r\n    </Container>\r\n  );\r\n}\r\n\r\nexport default VideoPlayer;\r\n","import React from \"react\";\r\nimport { Card } from \"semantic-ui-react\";\r\nimport VideoItem from \"./VideoItem\";\r\nimport { ReactSortable } from \"react-sortablejs\";\r\nimport \"../App.css\";\r\n\r\nfunction VideoQueue({ queue, setQueue, removeItem, playItem }) {\r\n  return (\r\n    <Card fluid>\r\n      <Card.Content>\r\n        <Card.Header>Queue</Card.Header>\r\n      </Card.Content>\r\n      <Card.Content className=\"video-queue\">\r\n        <ReactSortable list={queue} setList={setQueue}>\r\n          {queue?.length &&\r\n            queue?.map((x) => (\r\n              <VideoItem\r\n                key={x.key}\r\n                thumbnailText=\"Play\"\r\n                onRemoveClick={removeItem}\r\n                onThumbnailClick={playItem}\r\n                showDelete\r\n                item={x}\r\n              />\r\n            ))}\r\n        </ReactSortable>\r\n        {!queue?.length && <h4>No item in queue</h4>}\r\n      </Card.Content>\r\n    </Card>\r\n  );\r\n}\r\n\r\nexport default VideoQueue;\r\n","import Search from \"./components/Search\";\nimport SearchResult from \"./components/SearchResult\";\nimport VideoPlayer from \"./components/VideoPlayer\";\nimport VideoQueue from \"./components/VideoQueue\";\nimport { useEffect, useState } from \"react\";\nimport axios from \"axios\";\nimport { Button, Container, Grid } from \"semantic-ui-react\";\nimport React from \"react\";\nimport ReactGa from \"react-ga\";\nimport dayjs from \"dayjs\";\nimport relativeTime from \"dayjs/plugin/relativeTime\";\ndayjs.extend(relativeTime);\n\nfunction App() {\n  const [searchResults, setSearchResults] = useState([]);\n  const [searchQuery, setSearchQuery] = useState(\"\");\n  const [videoToPlay, setVideoToPlay] = useState({});\n  const [queue, setQueue] = useState([]);\n  const [isLoaded, setIsLoaded] = useState(false);\n  const [hasStoredQueue, setHasStoredQueue] = useState(false);\n  const [loading, setLoading] = useState(false);\n  const ytqueueServer = process.env.REACT_APP_YTQUEUE_SERVER || \"\";\n\n  useEffect(() => {\n    if (queue.length) {\n      localStorage.setItem(\"storedQueue\", JSON.stringify(queue));\n    }\n  }, [queue]);\n\n  useEffect(() => {\n    const storedQueue = JSON.parse(localStorage.getItem(\"storedQueue\"));\n    if (storedQueue?.length) {\n      setHasStoredQueue(true);\n    }\n\n    ReactGa.initialize(\"UA-193720727-1\");\n    ReactGa.pageview(\"/\");\n  }, []);\n\n  const loadStoredQueue = () => {\n    setIsLoaded(true);\n    const storedQueue = JSON.parse(localStorage.getItem(\"storedQueue\"));\n    setQueue(storedQueue);\n  };\n\n  const searchVideo = async (searchQuery) => {\n    setLoading(true);\n    let { data } = await axios.get(`${ytqueueServer}api/search/${searchQuery}`);\n    data = data?.map((x) => {\n      const publishedAt = dayjs(x.snippet.publishedAt).fromNow();\n      return { ...x, publishedAt };\n    });\n\n    setSearchQuery(searchQuery);\n    setSearchResults(data);\n    setLoading(false);\n  };\n\n  const addToQueue = (item) => {\n    if (queue.length < 1) {\n      setVideoToPlay(item);\n      item.played = true;\n    }\n    item.key = Math.random().toString(36).substr(2, 5);\n    setQueue([...queue, item]);\n  };\n\n  const playNextInQueue = (key) => {\n    const playedItemIndex = queue.findIndex((x) => x.key === key);\n\n    if (playedItemIndex >= 0 && playedItemIndex !== queue.length) {\n      const nextItemIndex = playedItemIndex + 1;\n      const nextItemToPlay = queue[nextItemIndex];\n      if (nextItemToPlay) {\n        nextItemToPlay.played = true;\n        setQueue([...queue]);\n        setVideoToPlay(nextItemToPlay);\n      }\n    }\n  };\n\n  const removeItem = (item) => {\n    const itemToRemove = queue.findIndex((x) => x.key === item.key);\n    queue.splice(itemToRemove, 1);\n\n    setQueue([...queue]);\n  };\n\n  const playItem = (item) => {\n    const itemToPlay = queue.find((x) => x.key === item.key);\n    itemToPlay.isPlayed = true;\n    setQueue([...queue]);\n    setVideoToPlay(itemToPlay);\n  };\n\n  return (\n    <Container>\n      <Search loading={loading} searchVideo={searchVideo} />\n\n      <Grid columns=\"equal\">\n        <Grid.Column>\n          {searchResults?.length > 0 && (\n            <SearchResult\n              searchQuery={searchQuery}\n              searchResults={searchResults}\n              addToQueue={addToQueue}\n            />\n          )}\n          <VideoPlayer videoToPlay={videoToPlay} onEnded={playNextInQueue} />\n        </Grid.Column>\n        <Grid.Column>\n          {/* maintain state of queue */}\n          <VideoQueue\n            playItem={playItem}\n            removeItem={removeItem}\n            queue={queue}\n            setQueue={setQueue}\n          />\n          {hasStoredQueue && !isLoaded && (\n            <Button secondary size=\"small\" onClick={loadStoredQueue}>\n              Load queue from local storage\n            </Button>\n          )}\n        </Grid.Column>\n      </Grid>\n    </Container>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"semantic-ui-css/semantic.min.css\";\nimport \"./index.css\";\nimport App from \"./App\";\nimport reportWebVitals from \"./reportWebVitals\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}
{"version":3,"sources":["components/Search.js","components/VideoItem.js","components/SearchResult.js","components/VideoPlayer.js","components/VideoQueue.js","App.js","reportWebVitals.js","index.js"],"names":["Search","searchVideo","useState","searchInput","setSearchInput","isKaraoke","setIsKaraoke","Grid","columns","Column","width","Input","fluid","placeholder","value","onChange","e","target","Button","icon","labelPosition","onClick","Icon","name","className","type","id","checked","currentTarget","htmlFor","VideoItem","item","addToQueue","showButton","Feed","Event","Label","image","snippet","thumbnails","default","url","Content","Date","content","publishedAt","Summary","title","SearchResult","searchResults","accordionOpen","setAccordionOpen","Accordion","Title","active","Card","Header","length","map","x","videoId","VideoPlayer","videoToPlay","onEnded","playing","controls","etag","VideoQueue","queue","App","setSearchResults","setVideoToPlay","setQueue","ytqueueServer","process","REACT_APP_YTQUEUE_SERVER","searchQuery","a","axios","get","data","Container","Helmet","isPlayed","playedItemIndex","findIndex","console","log","nextItemToPlay","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.b4246d85.chunk.js","sourcesContent":["import React, { useState } from \"react\";\r\nimport { Button, Input, Icon, Container, Grid } from \"semantic-ui-react\";\r\nimport \"../App.css\";\r\n\r\nfunction Search({ searchVideo }) {\r\n  const [searchInput, setSearchInput] = useState(\"\");\r\n  const [isKaraoke, setIsKaraoke] = useState(true);\r\n  // TODO:  i18n, tailwind?\r\n\r\n  return (\r\n    <Grid columns=\"equal\">\r\n      <Grid.Column width={8}>\r\n        <Input\r\n          fluid\r\n          placeholder=\"Search...\"\r\n          value={searchInput}\r\n          onChange={(e) => setSearchInput(e.target.value)}\r\n        />\r\n      </Grid.Column>\r\n      <Grid.Column>\r\n        <Button\r\n          icon\r\n          labelPosition=\"left\"\r\n          onClick={() => searchVideo(searchInput)}\r\n        >\r\n          <Icon name=\"search\" />\r\n          Search\r\n        </Button>\r\n      </Grid.Column>\r\n      <Grid.Column>\r\n        <div className=\"items\">\r\n          <input\r\n            type=\"checkbox\"\r\n            id=\"is-karaoke\"\r\n            checked={isKaraoke}\r\n            value={isKaraoke}\r\n            onChange={(e) => setIsKaraoke(e.currentTarget.checked)}\r\n          />\r\n          <label htmlFor=\"is-karaoke\">Add \"karaoke\" to search</label>\r\n        </div>\r\n      </Grid.Column>\r\n    </Grid>\r\n  );\r\n}\r\n\r\nexport default Search;\r\n","import React from \"react\";\r\nimport { Card, Feed } from \"semantic-ui-react\";\r\n\r\nfunction VideoItem({ item, addToQueue, showButton }) {\r\n  return (\r\n    <Feed.Event>\r\n      {/* <h3>{item.snippet.title}</h3>\r\n              {showButton && (\r\n                <button onClick={() => addToQueue(item)}>Add to queue</button>\r\n              )} */}\r\n      <Feed.Label image={item.snippet.thumbnails?.default?.url} />\r\n      <Feed.Content>\r\n        <Feed.Date content={item.snippet.publishedAt} />\r\n        <Feed.Summary>{item.snippet.title}</Feed.Summary>\r\n        {showButton && (\r\n          <button onClick={() => addToQueue(item)}>Add to queue</button>\r\n        )}\r\n      </Feed.Content>\r\n    </Feed.Event>\r\n  );\r\n}\r\n\r\nexport default VideoItem;\r\n","import React, { useState } from \"react\";\r\nimport { Accordion, Card, Icon } from \"semantic-ui-react\";\r\nimport VideoItem from \"./VideoItem\";\r\n\r\nfunction SearchResult({ searchResults, addToQueue }) {\r\n  const [accordionOpen, setAccordionOpen] = useState(true);\r\n\r\n  return (\r\n    <Accordion>\r\n      <Accordion.Title\r\n        active={accordionOpen}\r\n        onClick={() => setAccordionOpen(!accordionOpen)}\r\n      >\r\n        <Icon name=\"dropdown\" />\r\n        Search Result\r\n      </Accordion.Title>\r\n      <Accordion.Content active={accordionOpen}>\r\n        <Card fluid>\r\n          <Card.Content>\r\n            <Card.Header>Search result</Card.Header>\r\n          </Card.Content>\r\n          <Card.Content fluid>\r\n            {searchResults?.length &&\r\n              searchResults.map((x) => (\r\n                <VideoItem\r\n                  key={x.id.videoId}\r\n                  item={x}\r\n                  showButton\r\n                  addToQueue={addToQueue}\r\n                />\r\n              ))}\r\n          </Card.Content>\r\n        </Card>\r\n      </Accordion.Content>\r\n    </Accordion>\r\n  );\r\n}\r\n\r\nexport default SearchResult;\r\n","import React from \"react\";\r\nimport ReactPlayer from \"react-player/youtube\";\r\nimport \"../App.css\";\r\n\r\nfunction VideoPlayer({ videoToPlay, onEnded }) {\r\n  // TODO: button to toggle picture in picture\r\n  const youtubeUrl = \"https://www.youtube.com/watch?v=\";\r\n\r\n  return (\r\n    <div>\r\n      <h4>Currently playing</h4>\r\n      <div className=\"video-responsive\">\r\n        <ReactPlayer\r\n          playing\r\n          controls\r\n          onEnded={() => onEnded(videoToPlay?.etag)}\r\n          url={`${youtubeUrl}${videoToPlay?.id?.videoId}`}\r\n        />\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default VideoPlayer;\r\n","import React from \"react\";\r\nimport { Card, Feed } from \"semantic-ui-react\";\r\nimport VideoItem from \"./VideoItem\";\r\n\r\nfunction VideoQueue({ queue }) {\r\n  return (\r\n    <div>\r\n      <Card fluid>\r\n        <Card.Content>\r\n          <Card.Header>Queue</Card.Header>\r\n        </Card.Content>\r\n        <Card.Content fluid>\r\n          {queue?.length && (\r\n            <Feed>\r\n              {queue.map((x) => (\r\n                <VideoItem key={x.id.videoId} item={x} />\r\n              ))}\r\n            </Feed>\r\n          )}\r\n          {!queue?.length && <h4>No item queue</h4>}\r\n        </Card.Content>\r\n      </Card>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default VideoQueue;\r\n","import Search from \"./components/Search\";\nimport SearchResult from \"./components/SearchResult\";\nimport VideoPlayer from \"./components/VideoPlayer\";\nimport VideoQueue from \"./components/VideoQueue\";\nimport { useState } from \"react\";\nimport axios from \"axios\";\nimport { Container, Grid } from \"semantic-ui-react\";\nimport React from \"react\";\nimport { Helmet } from \"react-helmet\";\n\nconst TITLE = \"YTQueue | Play video in queue, great for Karaoke nights\";\n\nfunction App() {\n  const [searchResults, setSearchResults] = useState([]);\n  const [videoToPlay, setVideoToPlay] = useState({});\n  const [queue, setQueue] = useState([]);\n\n  const ytqueueServer = process.env.REACT_APP_YTQUEUE_SERVER || \"\";\n\n  const searchVideo = async (searchQuery) => {\n    const { data } = await axios.get(\n      `${ytqueueServer}api/search/${searchQuery}`\n    );\n    setSearchResults(data);\n  };\n\n  const addToQueue = (item) => {\n    if (queue.length < 1) {\n      setVideoToPlay(item);\n    }\n    item.isPlayed = false;\n    setQueue([...queue, item]);\n  };\n\n  const playNextInQueue = (etag) => {\n    const playedItemIndex = queue.findIndex((x) => x.etag === etag);\n    console.log(\n      \"🚀 ~ file: App.js ~ line 34 ~ playNextInQueue ~ playedItemIndex\",\n      playedItemIndex\n    );\n\n    if (playedItemIndex >= 0 && playedItemIndex !== queue.length) {\n      const nextItemToPlay = queue[playedItemIndex + 1];\n      setVideoToPlay(nextItemToPlay);\n    }\n  };\n\n  return (\n    <Container>\n      <Helmet>\n        <title>{TITLE}</title>\n      </Helmet>\n      <Search searchVideo={searchVideo} />\n      <Grid columns=\"equal\">\n        <Grid.Column>\n          {searchResults?.length > 0 && (\n            <SearchResult\n              searchResults={searchResults}\n              addToQueue={addToQueue}\n            />\n          )}\n          <VideoPlayer videoToPlay={videoToPlay} onEnded={playNextInQueue} />\n        </Grid.Column>\n        <Grid.Column>\n          {/* maintain state of queue */}\n          <VideoQueue queue={queue} />\n        </Grid.Column>\n      </Grid>\n    </Container>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"semantic-ui-css/semantic.min.css\";\nimport \"./index.css\";\nimport App from \"./App\";\nimport reportWebVitals from \"./reportWebVitals\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}